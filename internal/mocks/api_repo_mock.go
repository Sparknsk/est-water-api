// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozonmp/est-water-api/internal/repo (interfaces: Repo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/ozonmp/est-water-api/internal/model"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// CreateWater mocks base method.
func (m *MockRepo) CreateWater(arg0 context.Context, arg1 *model.Water) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWater", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateWater indicates an expected call of CreateWater.
func (mr *MockRepoMockRecorder) CreateWater(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWater", reflect.TypeOf((*MockRepo)(nil).CreateWater), arg0, arg1)
}

// DescribeWater mocks base method.
func (m *MockRepo) DescribeWater(arg0 context.Context, arg1 uint64) (*model.Water, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeWater", arg0, arg1)
	ret0, _ := ret[0].(*model.Water)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeWater indicates an expected call of DescribeWater.
func (mr *MockRepoMockRecorder) DescribeWater(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeWater", reflect.TypeOf((*MockRepo)(nil).DescribeWater), arg0, arg1)
}

// ListWaters mocks base method.
func (m *MockRepo) ListWaters(arg0 context.Context, arg1, arg2 uint64) ([]model.Water, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWaters", arg0, arg1, arg2)
	ret0, _ := ret[0].([]model.Water)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWaters indicates an expected call of ListWaters.
func (mr *MockRepoMockRecorder) ListWaters(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWaters", reflect.TypeOf((*MockRepo)(nil).ListWaters), arg0, arg1, arg2)
}

// RemoveWater mocks base method.
func (m *MockRepo) RemoveWater(arg0 context.Context, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveWater", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveWater indicates an expected call of RemoveWater.
func (mr *MockRepoMockRecorder) RemoveWater(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveWater", reflect.TypeOf((*MockRepo)(nil).RemoveWater), arg0, arg1)
}
